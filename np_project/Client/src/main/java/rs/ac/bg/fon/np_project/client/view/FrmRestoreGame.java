/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.ac.bg.fon.np_project.client.view;

import rs.ac.bg.fon.np_project.client.controller.ControllerUI;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import rs.ac.bg.fon.np_project.commonlibrary.model.Rent;
import rs.ac.bg.fon.np_project.commonlibrary.model.User;
import rs.ac.bg.fon.np_project.client.validation.ValidationException;
import rs.ac.bg.fon.np_project.client.validation.Validator;
import rs.ac.bg.fon.np_project.client.view.tableModel.TableModelRentedGame;
import rs.ac.bg.fon.np_project.client.view.tableModel.TableModelUser;

/**
 *
 * @author Simona
 */
public class FrmRestoreGame extends javax.swing.JDialog {

    /**
     * Creates new form FrmRestoreGame
     */
    public FrmRestoreGame(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        FrameCenter.CenteredFrame(this);
        prepareForm();
        setTitle("Razduzivanje igre");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblClanskaKarta = new javax.swing.JLabel();
        txtClanskaKarta = new javax.swing.JTextField();
        lblClanskaKarta1 = new javax.swing.JLabel();
        txtImePrezime = new javax.swing.JTextField();
        btnFindUserByname = new javax.swing.JButton();
        btnFindUser = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblUsers = new javax.swing.JTable();
        tbtRentedGames = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblGames = new javax.swing.JTable();
        btnRestore = new javax.swing.JButton();
        btnShowGames = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblClanskaKarta.setText("Pretrazi broj clanske karte");

        lblClanskaKarta1.setText("Pretrazi ime i prezime");

        btnFindUserByname.setText("Pronadji korisnika");
        btnFindUserByname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindUserBynameActionPerformed(evt);
            }
        });

        btnFindUser.setText("Pronadji korisnika");
        btnFindUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindUserActionPerformed(evt);
            }
        });

        tblUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Ime", "Prezime", "Telefon", "Adresa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblUsers);

        tbtRentedGames.setText("Zaduzene igre");

        tblGames.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Naziv", "Izdavac"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblGames);

        btnRestore.setText("Razduzi igru");
        btnRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestoreActionPerformed(evt);
            }
        });

        btnShowGames.setText("Prikazi sve zaduzene igre");
        btnShowGames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowGamesActionPerformed(evt);
            }
        });

        btnBack.setText("Nazad");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnFindUser, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(249, 249, 249)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnFindUserByname, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(239, 239, 239))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblClanskaKarta1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtImePrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblClanskaKarta, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtClanskaKarta, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tbtRentedGames, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnShowGames, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnRestore, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 817, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblClanskaKarta)
                        .addComponent(txtClanskaKarta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblClanskaKarta1)
                            .addComponent(txtImePrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFindUserByname)
                            .addComponent(btnFindUser))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbtRentedGames, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShowGames))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRestore)
                    .addComponent(btnBack))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(129, 129, 129)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addGap(245, 245, 245)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindUserBynameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindUserBynameActionPerformed
        try {
            validateInput(txtImePrezime);
            String name = txtImePrezime.getText().trim();
            List<User> users = ControllerUI.getInstance().getUsersByName(name);
            if (users == null || users.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da pronadje clana po zadatoj vrednosti.", "Greska", JOptionPane.ERROR_MESSAGE);
                ((TableModelUser) tblUsers.getModel()).setUsers(new ArrayList<>());
                ((TableModelRentedGame) tblGames.getModel()).setRents(new ArrayList<>());
            } else {
                JOptionPane.showMessageDialog(this, "Sistem je pronasao clana.");
                ((TableModelUser) tblUsers.getModel()).setUsers(users);
            }
        } catch (ValidationException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnFindUserBynameActionPerformed

    private void btnFindUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindUserActionPerformed
        try {
            validateInput(txtClanskaKarta);
            String cardNumber = txtClanskaKarta.getText().trim();
            List<User> clanovi = (List<User>) ControllerUI.getInstance().getUsersByUsersCard(cardNumber);
            if (clanovi == null || clanovi.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da pronadje clana.","Greska", JOptionPane.ERROR_MESSAGE);
                ((TableModelUser) tblUsers.getModel()).setUsers(new ArrayList<>());
            } else {
                JOptionPane.showMessageDialog(this, "Sistem je pronasao clana.");
                ((TableModelUser) tblUsers.getModel()).setUsers(clanovi);
                User u = clanovi.get(0);
                List<Rent> userRents = ControllerUI.getInstance().getUserRents(u);
                ((TableModelRentedGame) tblGames.getModel()).setRents(userRents);
            }

        } catch (ValidationException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnFindUserActionPerformed

    private void btnRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestoreActionPerformed
        int selectedGame = tblGames.getSelectedRow();
        if (selectedGame != -1) {
            try {
                restoreGame(selectedGame);
                JOptionPane.showMessageDialog(this,"Sistem je izvrsio razduzivanje igre.");
                // JOptionPane.showMessageDialog(this,"Sistem ne može da izvrši razduživanje.","Error", JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnRestoreActionPerformed

    private void btnShowGamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowGamesActionPerformed

        int selectedRow=tblUsers.getSelectedRow();
         if(selectedRow!=-1){
          User u = ((TableModelUser)tblUsers.getModel()).getUser(selectedRow);
                List<Rent> userRents;
             try {
                 userRents = ControllerUI.getInstance().getUserRents(u);
                 ((TableModelRentedGame) tblGames.getModel()).setRents(userRents);
             } catch (Exception ex) {
                 Logger.getLogger(FrmRestoreGame.class.getName()).log(Level.SEVERE, null, ex);
             }
        }

    }//GEN-LAST:event_btnShowGamesActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        this.dispose();

    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRestoreGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRestoreGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRestoreGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRestoreGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmRestoreGame dialog = new FrmRestoreGame(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFindUser;
    private javax.swing.JButton btnFindUserByname;
    private javax.swing.JButton btnRestore;
    private javax.swing.JButton btnShowGames;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblClanskaKarta;
    private javax.swing.JLabel lblClanskaKarta1;
    private javax.swing.JTable tblGames;
    private javax.swing.JTable tblUsers;
    private javax.swing.JLabel tbtRentedGames;
    private javax.swing.JTextField txtClanskaKarta;
    private javax.swing.JTextField txtImePrezime;
    // End of variables declaration//GEN-END:variables

    private void prepareForm() {

        TableModelUser tmu = new TableModelUser();
        tmu.setUsers(new ArrayList<>());
        tblUsers.setModel(tmu);
        TableModelRentedGame tmg = new TableModelRentedGame(new ArrayList<>());
        tblGames.setModel(tmg);

    }

    private void validateInput(JTextField input) throws ValidationException {
        Validator.startValidation().validateNotNullOrEmpty(input.getText(), "Unesite vrednost pretrage!").throwIfInvalide();
    }

    private void restoreGame(int selectedGame) throws Exception{

        Rent rental = ((TableModelRentedGame) tblGames.getModel()).getRent(selectedGame);
        ControllerUI.getInstance().restoreGame(rental);
        ((TableModelRentedGame) tblGames.getModel()).deleteRent(selectedGame);
        ((TableModelRentedGame) tblGames.getModel()).fireTableDataChanged();

    }
}
