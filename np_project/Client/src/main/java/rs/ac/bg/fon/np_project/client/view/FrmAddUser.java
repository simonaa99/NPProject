/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.ac.bg.fon.np_project.client.view;

import rs.ac.bg.fon.np_project.client.controller.ControllerUI;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import rs.ac.bg.fon.np_project.commonlibrary.model.User;
import rs.ac.bg.fon.np_project.commonlibrary.model.UserCard;
import rs.ac.bg.fon.np_project.commonlibrary.model.UserCategory;
import rs.ac.bg.fon.np_project.client.validation.ValidationException;
import rs.ac.bg.fon.np_project.client.validation.Validator;

/**
 *
 * @author Simona
 */
public class FrmAddUser extends javax.swing.JDialog {
    
    private User user;
    
    /**
     * Creates new form FrmAddUser
     */
    public FrmAddUser(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        user=new User();
        setTitle("Dodavanje korisnika");
        initComponents();
        try {
            try {
                prepareForm();
            } catch (Exception ex) {
                Logger.getLogger(FrmAddUser.class.getName()).log(Level.SEVERE, null, ex);
            }
            FrameCenter.CenteredFrame(this);
            // JOptionPane.showMessageDialog(this, "Sistem je kreirao novog clana!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da kreira nogo clana!", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        txtPrez = new javax.swing.JTextField();
        txtTelefon = new javax.swing.JTextField();
        txtAdresa = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cmbKategorija = new javax.swing.JComboBox();
        btnGenerisi = new javax.swing.JButton();
        txtBrojClanskeKarte = new javax.swing.JTextField();
        btnSacuvaj = new javax.swing.JButton();
        btnNazad = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Ime");

        jLabel3.setText("Prezime");

        jLabel4.setText("Kontakt telefon");

        jLabel5.setText("Adresa");

        jLabel6.setText("Izaberi kategoriju");

        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("<Ulica Broj, Postanski_broj Grad>");

        cmbKategorija.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnGenerisi.setText("Generisi broj clanske karte");
        btnGenerisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerisiActionPerformed(evt);
            }
        });

        txtBrojClanskeKarte.setEditable(false);

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnNazad.setText("Nazad");
        btnNazad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNazadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrez, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAdresa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbKategorija, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNazad, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtBrojClanskeKarte, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGenerisi, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrez, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbKategorija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(btnGenerisi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBrojClanskeKarte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacuvaj)
                    .addComponent(btnNazad))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerisiActionPerformed
        String cardNumber = "";
        Random rand = new Random();
        
        for(int i = 0; i < 15; i++){

            cardNumber += rand.nextInt(9);
        }
        txtBrojClanskeKarte.setText(cardNumber);
    }//GEN-LAST:event_btnGenerisiActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        try {
            validateInputs();

            user.setName(txtIme.getText());
            user.setLastName(txtPrez.getText());
            user.setPhoneNumber(txtTelefon.getText());
            user.setAddress(txtAdresa.getText());
            user.setUserCategory((UserCategory)cmbKategorija.getSelectedItem());
            UserCard userCard=new UserCard();
            userCard.setCardNumber(txtBrojClanskeKarte.getText());
            userCard.setIssueDate(LocalDate.now());
            userCard.setExpiryDate(userCard.getIssueDate().plusYears(1));
            user.setUsercard(userCard);
            ControllerUI.getInstance().addUser(user);
            JOptionPane.showMessageDialog(this,"Sistem je zapamtio novog clana." );
            refreshForm();
        }
        catch (ValidationException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Nepravilan unos!", JOptionPane.ERROR_MESSAGE);}
        catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti novog clana: "+ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);}
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnNazadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNazadActionPerformed

        this.dispose();

    }//GEN-LAST:event_btnNazadActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnGenerisi;
    private javax.swing.JButton btnNazad;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cmbKategorija;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtAdresa;
    private javax.swing.JTextField txtBrojClanskeKarte;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtPrez;
    private javax.swing.JTextField txtTelefon;
    // End of variables declaration//GEN-END:variables

    private void prepareForm() throws SQLException, Exception {

        cmbKategorija.removeAllItems();
        
        List<UserCategory> kategorije=ControllerUI.getInstance().getUserCategories();
        for (UserCategory kategorijaClanova : kategorije) {
            cmbKategorija.addItem(kategorijaClanova);
        }

    }

    private void validateInputs() throws ValidationException {

        Validator.startValidation().validateNotNullOrEmpty(txtIme.getText(), "Popunite polje za ime!").throwIfInvalide();
        Validator.startValidation().validateNotNullOrEmpty(txtPrez.getText(), "Popunite polje za prezime!").throwIfInvalide();
        Validator.startValidation().validateNotNullOrEmpty(txtTelefon.getText(), "Popunite polje za kontakt!").throwIfInvalide();
        Validator.startValidation().validateFormat(txtTelefon.getText(), "[0-9,/,-]+", "Format telefonskog broja nije podrzan!").throwIfInvalide();
         
        Validator.startValidation().validateNotNullOrEmpty(txtAdresa.getText(), "Popunite polje za adresu!").throwIfInvalide();
        Validator.startValidation().validateNotNullOrEmpty(txtBrojClanskeKarte.getText(), "Generisite broj clanske karte!").throwIfInvalide();

    }

    private void refreshForm() {

        txtIme.setText("");
        txtPrez.setText("");
        txtTelefon.setText("");
        txtAdresa.setText("");
        txtBrojClanskeKarte.setText("");
        
    }
}
